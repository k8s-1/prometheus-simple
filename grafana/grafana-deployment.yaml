apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      automountServiceAccountToken: false
      containers:
      - env: []
        image: grafana/grafana:11.1.3
        name: grafana
        ports:
        - containerPort: 3000
          name: http
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-storage
          readOnly: false
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasources
          readOnly: false
        # - mountPath: /etc/grafana/provisioning/dashboards
        #   name: grafana-dashboards
        #   readOnly: false
        # - mountPath: /tmp
        #   name: tmp-plugins
        #   readOnly: false
        - mountPath: /etc/grafana
          name: grafana-config
          readOnly: false
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: grafana
      volumes:
      - emptyDir: {}
        name: grafana-storage
      - name: grafana-datasources
        secret:
          secretName: grafana-datasources
      # - configMap:
      #     name: grafana-dashboards
      #   name: grafana-dashboards
      # - emptyDir:
      #     medium: Memory
      #   name: tmp-plugins
      - name: grafana-config
        secret:
          secretName: grafana-config
